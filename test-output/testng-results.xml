<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="18" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="13253" started-at="2021-03-28T08:04:04 IST" finished-at="2021-03-28T08:04:17 IST">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Runner" duration-ms="13253" started-at="2021-03-28T08:04:04 IST" finished-at="2021-03-28T08:04:17 IST">
      <class name="runner.TestRunner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.TestRunner@58c1670b]" name="setUpClass" is-config="true" duration-ms="920" started-at="2021-03-28T08:04:04 IST" finished-at="2021-03-28T08:04:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="5383" started-at="2021-03-28T08:04:05 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get all exchange rates for sunday with date "2021-03-21""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for past data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="5382" started-at="2021-03-28T08:04:05 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get all exchange rates against CNY for "2021-03-23""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for past data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="5383" started-at="2021-03-28T08:04:05 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get exchange rate for GBP against USD for "2021-03-23""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for past data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="5382" started-at="2021-03-28T08:04:05 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get all exchange rates for latest date"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for latest data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="5288" started-at="2021-03-28T08:04:05 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get all exchange rates against ZXZ for "2021-03-23""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for past data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="5382" started-at="2021-03-28T08:04:05 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get all exchange rates for "2021-03-22""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for past data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="5288" started-at="2021-03-28T08:04:05 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get exchange rate for PPP against USD for "2021-03-23""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for past data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="5288" started-at="2021-03-28T08:04:05 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get exchange rate for SSS against EUR for "2021-03-23""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for past data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="5383" started-at="2021-03-28T08:04:05 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get exchange rate for USD against EUR for "2021-03-23""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for past data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="5379" started-at="2021-03-28T08:04:05 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get all exchange rates for saturday with date "2021-03-20""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for past data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="1827" started-at="2021-03-28T08:04:10 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get all exchange rates for latest and future date"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for latest data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="853" started-at="2021-03-28T08:04:10 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get exchange rate for USD against EUR"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for latest data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="620" started-at="2021-03-28T08:04:10 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get all exchange rates against INR"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for latest data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="912" started-at="2021-03-28T08:04:10 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get exchange rate for BRL against INR"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for latest data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="891" started-at="2021-03-28T08:04:10 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get exchange rate for US against EUR"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for latest data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="4101" started-at="2021-03-28T08:04:10 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Get all exchange rates with incorrect url"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for latest data]"]]>
              </value>
            </param>
          </params>
          <exception class="java.net.ConnectException">
            <message>
              <![CDATA[Connection refused: connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.net.ConnectException: Connection refused: connect
at java.net.DualStackPlainSocketImpl.connect0(Native Method)
at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:75)
at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
at java.net.Socket.connect(Socket.java:606)
at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:326)
at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
at org.apache.http.client.HttpClient$execute$17.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl$RestAssuredHttpBuilder.doRequest(RequestSpecificationImpl.groovy:2055)
at io.restassured.internal.http.HTTPBuilder.doRequest(HTTPBuilder.java:495)
at io.restassured.internal.http.HTTPBuilder.request(HTTPBuilder.java:452)
at io.restassured.internal.http.HTTPBuilder$request$27.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.sendHttpRequest(RequestSpecificationImpl.groovy:1451)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1035)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:819)
at groovy.lang.GroovyObject.invokeMethod(GroovyObject.java:39)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:45)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:55)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1200)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1035)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:819)
at groovy.lang.GroovyObject.invokeMethod(GroovyObject.java:39)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter$9.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$3.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next$6.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1655)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1035)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:819)
at groovy.lang.GroovyObject.invokeMethod(GroovyObject.java:39)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:45)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:55)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1661)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1035)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:819)
at groovy.lang.GroovyObject.invokeMethod(GroovyObject.java:39)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:45)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:55)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:171)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
at step_definitions.Get_ExchangeRates.lambda$4(Get_ExchangeRates.java:69)
at ✽.I hit incorrect URL "https://api.ratesapi.io/api/" with date as ""(classpath:features/ExchangesRates_LatestData.feature:42)
]]>
            </full-stacktrace>
          </exception> <!-- java.net.ConnectException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="906" started-at="2021-03-28T08:04:10 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get all exchange rates against TYT"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for latest data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@58c1670b]" name="runScenario" duration-ms="888" started-at="2021-03-28T08:04:10 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-28T08:04:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get exchange rate for 123 against USD"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Foreign exchange rates with currency conversion for latest data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.TestRunner@58c1670b]" name="tearDownClass" is-config="true" duration-ms="2774" started-at="2021-03-28T08:04:14 IST" finished-at="2021-03-28T08:04:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.TestRunner -->
    </test> <!-- Runner -->
  </suite> <!-- Suite -->
</testng-results>
